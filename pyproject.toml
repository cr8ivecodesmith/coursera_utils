[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "study-utils"
version = "0.2.0"
description = "Study utilities for transcription, document generation, and quiz prep."
readme = "README.md"
requires-python = ">=3.12,<3.14"
authors = [{ name = "Matt Lebrun" }]
dependencies = [
  "yt-dlp[default]",
  "dl-coursera",
  "pydub",
  "SpeechRecognition",
  "openai",
  "langchain",
  "tiktoken",
  "unstructured",
  "markitdown",
  "faiss-cpu",
  "python-dotenv",
  "markdown-it-py",
  "Jinja2",
  "Pygments",
  "weasyprint",
  "rich",
]

[project.optional-dependencies]
dev = [
  "pytest",
  "coverage",
  "pytest-xdist",
  "pytest-cov",
  "ruff",
]

[project.scripts]
study = "study_utils.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
study_utils = [
  "documents.toml",
  "resources/*.css",
  "convert_markdown/*.toml",
]

[tool.uv]
dev-dependencies = [
  "pytest",
  "coverage",
  "pytest-xdist",
  "pytest-cov",
  "ruff",
]

[tool.ruff]
line-length = 80
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "N", "W", "C90"]
ignore = []

[tool.ruff.lint.pycodestyle]
max-line-length = 80
max-doc-length = 120

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.pytest.ini_options]
addopts = "-q -n auto --cov=study_utils --cov-report=term-missing --cov-report=xml --cov-fail-under=100 --maxfail=1"
testpaths = ["tests"]
